# -*- makefile -*-
# M4M module for word alignment with fast_align
# see http://aclweb.org/anthology-new/N/N13/N13-1073 (paper)
# see https://github.com/clab/fast_align (github)

fast_align.args    ?= -d -v -o 
fast_align.command ?= $(fast_align.binary) $(fast_align.args)

fstaln   ?= ${WDIR}/crp/trn/aln/fast
fstaln.in = $(addprefix ${WDIR}/crp/trn/pll/clean/, ${pllshards})
# symal 
symal_grow_diag_final_and = -a=g -d=yes -f=yes -b=yes 
symal_args = ${symal_grow_diag_final_and}

#$1 paths and base names of shards to be aligned
#$2 path and base name of the resulting word-aligned corpus (single file)
define fast_align

$2${L1}$(zipped): $(addsuffix ${L1}$(zipped),$1)
	$$(lock)
	$(if $(filter $(words $1),1), ln -f $$< $$@,\
	cat $(addsuffix ${L1}$(zipped),$1) > $$@_ && mv $$@_ $$@)
	$$(unlock)

$2${L2}$(zipped): $(addsuffix ${L2}$(zipped),$1)
	$$(lock)
	$(if $(filter $(words $1),1), ln -f $$< $$@,\
	cat $(addsuffix ${L2}$(zipped),$1) > $$@_ && mv $$@_ $$@)
	$$(unlock)

$2${L1}-${L2}.fwd$(zipped): $(fast_align.executable)
$2${L1}-${L2}.fwd$(zipped): $2${L1}$(zipped) $2${L2}$(zipped)
	$$(lock)
	$(fast_align.command) $2${L1}$(zipped) $2${L2}$(zipped) \
	| $(zipper) > $$@_ && mv $$@_ $$@
	$$(unlock)

$2${L1}-${L2}.bwd$(zipped): $(fast_align.executable)
$2${L1}-${L2}.bwd$(zipped): $2${L1}$(zipped) $2${L2}$(zipped)
	$$(lock)
	$(fast_align.command) $2${L1}$(zipped) $2${L2}$(zipped) \
	| $(zipper) > $$@_ && mv $$@_ $$@
	$$(unlock)

$2${L1}-${L2}.symal$(zipped): | $2${L1}$(zipped) $2${L2}$(zipped)
$2${L1}-${L2}.symal$(zipped): | $2${L1}-${L2}.fwd$(zipped)
$2${L1}-${L2}.symal$(zipped): | $2${L1}-${L2}.bwd$(zipped)
$2${L1}-${L2}.symal$(zipped):  
	$$(lock)
	${m4mdir}/scripts/fast-align2bal.py \
		<($(zcat) $2${L1}$(zipped)) \
		<($(zcat) $2${L2}$(zipped)) \
		<(zcat $2${L1}-${L2}.fwd$(zipped)) \
		<(zcat $2${L1}-${L2}.bwd$(zipped)) \
		| ${symal.command} | $(zipper) > $$@_ && mv $$@_ $$@
	$$(unlock)

endef

faln_shards := $(addprefix $(PLL_CLN)/nc/,$(addsuffix .,$(pllshards)))
faln_path   := $(PLL_ALN)/fast/$(subst $(space),+,$(pllshards)).
snippet     := $(call fast_align,$(faln_shards),$(faln_path))
ifeq ($(trace),on)
$(info $(snippet))
endif
$(eval $(snippet))
